buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        kafkaVersion = '2.1.0'
        modelMapperVersion = '2.3.0'
        kafkaStreamsVersion = '2.1.0'
        jacksonCoreVersion = '2.9.8'
        avroVersion = '1.8.2'
        confluentVersion = '4.1.2'
        jodaTimeVersion = '2.10.1'
        avroGradlePluginVersion = '0.16.0'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:${avroGradlePluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'ru.xegex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    jcenter()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
    mavenCentral()
}


dependencies {
    implementation 'ru.xegex.strategy:starter:0.0.1-20190330.105436-2'
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.modelmapper:modelmapper:$modelMapperVersion")
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "$jacksonCoreVersion"
    implementation("org.apache.avro:avro:$avroVersion")
    implementation("org.apache.kafka:kafka-clients:$kafkaVersion")
    implementation("org.apache.kafka:kafka-streams:$kafkaStreamsVersion")
    implementation("org.apache.kafka:kafka_2.12:$kafkaVersion")
    implementation("io.confluent:kafka-schema-registry-client:$confluentVersion")
    implementation("io.confluent:kafka-streams-avro-serde:$confluentVersion")
    implementation("io.confluent:kafka-avro-serializer:$confluentVersion")
    implementation("joda-time:joda-time:$jodaTimeVersion")
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    runtimeOnly('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
//    testImplementation('org.springframework.boot:spring-boot-starter-webflux')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.apache.kafka:kafka-clients:$kafkaVersion:test" )
}
