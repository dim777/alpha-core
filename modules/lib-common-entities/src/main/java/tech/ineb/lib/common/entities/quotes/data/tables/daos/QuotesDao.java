/*
 * This file is generated by jOOQ.
 */
package tech.ineb.lib.common.entities.quotes.data.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import tech.ineb.lib.common.entities.quotes.data.tables.Quotes;
import tech.ineb.lib.common.entities.quotes.data.tables.records.QuotesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuotesDao extends DAOImpl<QuotesRecord, tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes, UUID> {

    /**
     * Create a new QuotesDao without any configuration
     */
    public QuotesDao() {
        super(Quotes.QUOTES, tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes.class);
    }

    /**
     * Create a new QuotesDao with an attached configuration
     */
    public QuotesDao(Configuration configuration) {
        super(Quotes.QUOTES, tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes.class, configuration);
    }

    @Override
    public UUID getId(tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Quotes.QUOTES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchById(UUID... values) {
        return fetch(Quotes.QUOTES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes fetchOneById(UUID value) {
        return fetchOne(Quotes.QUOTES.ID, value);
    }

    /**
     * Fetch records that have <code>open BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfOpen(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Quotes.QUOTES.OPEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>open IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByOpen(BigDecimal... values) {
        return fetch(Quotes.QUOTES.OPEN, values);
    }

    /**
     * Fetch records that have <code>high BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfHigh(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Quotes.QUOTES.HIGH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>high IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByHigh(BigDecimal... values) {
        return fetch(Quotes.QUOTES.HIGH, values);
    }

    /**
     * Fetch records that have <code>low BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfLow(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Quotes.QUOTES.LOW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>low IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByLow(BigDecimal... values) {
        return fetch(Quotes.QUOTES.LOW, values);
    }

    /**
     * Fetch records that have <code>close BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfClose(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Quotes.QUOTES.CLOSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>close IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByClose(BigDecimal... values) {
        return fetch(Quotes.QUOTES.CLOSE, values);
    }

    /**
     * Fetch records that have <code>time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Quotes.QUOTES.TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>time IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByTime(LocalDateTime... values) {
        return fetch(Quotes.QUOTES.TIME, values);
    }

    /**
     * Fetch records that have <code>time_frame BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfTimeFrame(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Quotes.QUOTES.TIME_FRAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>time_frame IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByTimeFrame(Integer... values) {
        return fetch(Quotes.QUOTES.TIME_FRAME, values);
    }

    /**
     * Fetch records that have <code>equity_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfEquityId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Quotes.QUOTES.EQUITY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>equity_id IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByEquityId(UUID... values) {
        return fetch(Quotes.QUOTES.EQUITY_ID, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Quotes.QUOTES.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByVersion(Integer... values) {
        return fetch(Quotes.QUOTES.VERSION, values);
    }

    /**
     * Fetch records that have <code>equitiesid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchRangeOfEquitiesid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Quotes.QUOTES.EQUITIESID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>equitiesid IN (values)</code>
     */
    public List<tech.ineb.lib.common.entities.quotes.data.tables.pojos.Quotes> fetchByEquitiesid(UUID... values) {
        return fetch(Quotes.QUOTES.EQUITIESID, values);
    }
}
