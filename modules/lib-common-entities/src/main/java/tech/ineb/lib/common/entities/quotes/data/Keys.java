/*
 * This file is generated by jOOQ.
 */
package tech.ineb.lib.common.entities.quotes.data;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import tech.ineb.lib.common.entities.quotes.data.tables.Countries;
import tech.ineb.lib.common.entities.quotes.data.tables.Currencies;
import tech.ineb.lib.common.entities.quotes.data.tables.Equities;
import tech.ineb.lib.common.entities.quotes.data.tables.Orders;
import tech.ineb.lib.common.entities.quotes.data.tables.Quotes;
import tech.ineb.lib.common.entities.quotes.data.tables.Stocks;
import tech.ineb.lib.common.entities.quotes.data.tables.Ticks;
import tech.ineb.lib.common.entities.quotes.data.tables.records.CountriesRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.CurrenciesRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.EquitiesRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.OrdersRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.QuotesRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.StocksRecord;
import tech.ineb.lib.common.entities.quotes.data.tables.records.TicksRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>history</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CountriesRecord> COUNTRIES_PKEY = UniqueKeys0.COUNTRIES_PKEY;
    public static final UniqueKey<CurrenciesRecord> CURRENCIES_PKEY = UniqueKeys0.CURRENCIES_PKEY;
    public static final UniqueKey<EquitiesRecord> EQUITIES_PKEY = UniqueKeys0.EQUITIES_PKEY;
    public static final UniqueKey<OrdersRecord> ORDERS_PKEY = UniqueKeys0.ORDERS_PKEY;
    public static final UniqueKey<QuotesRecord> QUOTES_PKEY = UniqueKeys0.QUOTES_PKEY;
    public static final UniqueKey<StocksRecord> STOCKS_PKEY = UniqueKeys0.STOCKS_PKEY;
    public static final UniqueKey<TicksRecord> TICKS_PKEY = UniqueKeys0.TICKS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EquitiesRecord, CurrenciesRecord> EQUITIES__FKEQUITIES187020 = ForeignKeys0.EQUITIES__FKEQUITIES187020;
    public static final ForeignKey<EquitiesRecord, CountriesRecord> EQUITIES__FKEQUITIES215282 = ForeignKeys0.EQUITIES__FKEQUITIES215282;
    public static final ForeignKey<EquitiesRecord, StocksRecord> EQUITIES__FKEQUITIES433591 = ForeignKeys0.EQUITIES__FKEQUITIES433591;
    public static final ForeignKey<OrdersRecord, EquitiesRecord> ORDERS__FKORDERS661644 = ForeignKeys0.ORDERS__FKORDERS661644;
    public static final ForeignKey<QuotesRecord, EquitiesRecord> QUOTES__FKQUOTES231782 = ForeignKeys0.QUOTES__FKQUOTES231782;
    public static final ForeignKey<TicksRecord, EquitiesRecord> TICKS__FKTICKS788156 = ForeignKeys0.TICKS__FKTICKS788156;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<CountriesRecord> COUNTRIES_PKEY = Internal.createUniqueKey(Countries.COUNTRIES, "countries_pkey", new TableField[] { Countries.COUNTRIES.ID }, true);
        public static final UniqueKey<CurrenciesRecord> CURRENCIES_PKEY = Internal.createUniqueKey(Currencies.CURRENCIES, "currencies_pkey", new TableField[] { Currencies.CURRENCIES.ID }, true);
        public static final UniqueKey<EquitiesRecord> EQUITIES_PKEY = Internal.createUniqueKey(Equities.EQUITIES, "equities_pkey", new TableField[] { Equities.EQUITIES.ID }, true);
        public static final UniqueKey<OrdersRecord> ORDERS_PKEY = Internal.createUniqueKey(Orders.ORDERS, "orders_pkey", new TableField[] { Orders.ORDERS.ID }, true);
        public static final UniqueKey<QuotesRecord> QUOTES_PKEY = Internal.createUniqueKey(Quotes.QUOTES, "quotes_pkey", new TableField[] { Quotes.QUOTES.ID }, true);
        public static final UniqueKey<StocksRecord> STOCKS_PKEY = Internal.createUniqueKey(Stocks.STOCKS, "stocks_pkey", new TableField[] { Stocks.STOCKS.ID }, true);
        public static final UniqueKey<TicksRecord> TICKS_PKEY = Internal.createUniqueKey(Ticks.TICKS, "ticks_pkey", new TableField[] { Ticks.TICKS.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<EquitiesRecord, CurrenciesRecord> EQUITIES__FKEQUITIES187020 = Internal.createForeignKey(Keys.CURRENCIES_PKEY, Equities.EQUITIES, "fkequities187020", new TableField[] { Equities.EQUITIES.CURRENCY_ID }, true);
        public static final ForeignKey<EquitiesRecord, CountriesRecord> EQUITIES__FKEQUITIES215282 = Internal.createForeignKey(Keys.COUNTRIES_PKEY, Equities.EQUITIES, "fkequities215282", new TableField[] { Equities.EQUITIES.COUNTRY_ID }, true);
        public static final ForeignKey<EquitiesRecord, StocksRecord> EQUITIES__FKEQUITIES433591 = Internal.createForeignKey(Keys.STOCKS_PKEY, Equities.EQUITIES, "fkequities433591", new TableField[] { Equities.EQUITIES.STOCK_ID }, true);
        public static final ForeignKey<OrdersRecord, EquitiesRecord> ORDERS__FKORDERS661644 = Internal.createForeignKey(Keys.EQUITIES_PKEY, Orders.ORDERS, "fkorders661644", new TableField[] { Orders.ORDERS.EQUITY_ID }, true);
        public static final ForeignKey<QuotesRecord, EquitiesRecord> QUOTES__FKQUOTES231782 = Internal.createForeignKey(Keys.EQUITIES_PKEY, Quotes.QUOTES, "fkquotes231782", new TableField[] { Quotes.QUOTES.EQUITIESID }, true);
        public static final ForeignKey<TicksRecord, EquitiesRecord> TICKS__FKTICKS788156 = Internal.createForeignKey(Keys.EQUITIES_PKEY, Ticks.TICKS, "fkticks788156", new TableField[] { Ticks.TICKS.EQUITY_ID }, true);
    }
}
